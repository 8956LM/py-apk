name: Build APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install system dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update -y
          sudo apt-get install -y \
            unzip \
            libc6:i386 \
            libncurses6:i386 \
            libstdc++6:i386 \
            libz1:i386 \
            libx11-6:i386 \
            gcc-multilib \
            g++-multilib \
            autoconf \
            automake \
            libtool \
            openjdk-11-jdk \
            python3.8-dev \
            libbz2-dev \
            libdb-dev \
            libgdbm-dev \
            liblzma-dev \
            tk-dev \
            uuid-dev \
            libnsl-dev \
            libreadline-dev \
            libffi-dev \
            autoconf-archive \
            pkg-config

      - name: Create buildozer.spec
        run: |
          cat <<EOF > $GITHUB_WORKSPACE/buildozer.spec
          [app]
          title = MyApp
          package.name = pythonapp
          package.domain = com.example
          source.dir = .
          requirements = python3==3.8.6,kivy,libffi==3.4.4
          version = 0.1
          
          android.sdk_path = /usr/local/lib/android/sdk
          android.ndk_path = /usr/local/lib/android/sdk/ndk/25.2.9519653
          android.build_tools_version = 33.0.2
          android.api = 33
          android.minapi = 21
          android.ndk_api = 23
          android.accept_sdk_license = True
          android.archs = arm64-v8a,armeabi-v7a
          android.bootstrap = sdl2
          android.private_storage = true
          android.use_sdl2 = true
          
          [buildozer]
          log_level = 2
          warn_on_root = False
          EOF

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: ''

      - name: Install Android SDK and NDK
        run: |
          ANDROID_HOME=/usr/local/lib/android/sdk
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          
          # 创建 NDK 目录
          sudo mkdir -p $ANDROID_HOME/ndk/25.2.9519653
          sudo chown -R runner:runner $ANDROID_HOME
          
          # 下载 NDK（添加重试机制）
          NDK_URL="https://dl.google.com/android/repository/android-ndk-r25b-linux-x86_64.zip"
          NDK_ZIP="/tmp/android-ndk.zip"
          
          echo "开始下载 NDK（最多重试 3 次）..."
          for i in {1..3}; do
            echo "尝试下载第 $i 次..."
            wget -q --show-progress --timeout=30 --tries=3 "$NDK_URL" -O "$NDK_ZIP" && break
            if [ $i -eq 3 ]; then
              echo "错误：NDK 下载失败，退出代码 $?"
              exit 1
            fi
            echo "下载失败，等待 10 秒后重试..."
            sleep 10
          done
          
          # 解压 NDK
          echo "解压 NDK 到 $ANDROID_HOME/ndk/25.2.9519653..."
          unzip -q "$NDK_ZIP" -d "$ANDROID_HOME/ndk/25.2.9519653"
          rm "$NDK_ZIP"
          
          # 验证 NDK 安装
          if [ ! -f "$ANDROID_HOME/ndk/25.2.9519653/ndk-build" ]; then
            echo "错误：NDK 安装失败，找不到 ndk-build 工具"
            exit 1
          fi
          
          # 安装 SDK 组件
          echo "接受 SDK 许可证..."
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null
          
          echo "安装 SDK 组件..."
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "tools" "build-tools;33.0.2" "platforms;android-33"
          
          # 更新环境变量
          echo "PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/25.2.9519653" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=$ANDROID_HOME/ndk/25.2.9519653" >> $GITHUB_ENV

      - name: Create symbolic links
        run: |
          sudo ln -sfn $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager $ANDROID_HOME/tools/bin/sdkmanager
          sudo ln -sfn $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager $ANDROID_HOME/tools/bin/avdmanager

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install cython==0.29.36 buildozer==1.5.0 python-for-android==2023.9.16

      - name: Build APK
        run: |
          cd $GITHUB_WORKSPACE
          buildozer -v android debug 2>&1 | tee build.log
          
          if [ -f bin/*.apk ]; then
            mkdir -p artifacts
            cp bin/*.apk artifacts/
          else
            echo "=== 构建失败 ==="
            cat build.log
            exit 1
          fi

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: apk-artifact
          path: artifacts/*.apk

      - name: Upload build log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: build.log
