name: Build APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install system dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update -y
          sudo apt-get install -y \
            unzip \
            libc6:i386 \
            libncurses6:i386 \
            libstdc++6:i386 \
            libz1:i386 \
            libx11-6:i386 \
            gcc-multilib \
            g++-multilib \
            autoconf \
            automake \
            libtool \
            openjdk-11-jdk \
            python3.8-dev

      - name: Create buildozer.spec
        run: |
          cat <<EOF > $GITHUB_WORKSPACE/buildozer.spec
          [app]
          title = MyApp
          package.name = pythonapp
          package.domain = com.example
          source.dir = .
          requirements = python3==3.8.6,kivy
          version = 0.1
          
          android.sdk_path = /usr/local/lib/android/sdk
          android.ndk_path = /usr/local/lib/android/sdk/ndk/25.2.9519653
          android.build_tools_version = 33.0.2
          android.api = 33
          android.minapi = 21
          android.ndk_api = 23
          android.accept_sdk_license = True
          android.archs = arm64-v8a,armeabi-v7a

          [buildozer]
          log_level = 2
          warn_on_root = False
          EOF

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: ''





      - name: Install Android SDK
        run: |
          ANDROID_HOME=/usr/local/lib/android/sdk
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          
          # 清理并创建目录结构
          sudo rm -rf $ANDROID_HOME
          sudo mkdir -p $ANDROID_HOME/cmdline-tools/latest
          sudo chown -R runner:runner $ANDROID_HOME
          
          # 下载并解压命令行工具
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O /tmp/cmdline-tools.zip
          unzip -q /tmp/cmdline-tools.zip -d /tmp/cmdline-tools
          
          # 使用rsync安全复制文件
          if [ -d "/tmp/cmdline-tools/cmdline-tools" ]; then
            rsync -a /tmp/cmdline-tools/cmdline-tools/ $ANDROID_HOME/cmdline-tools/latest/
          else
            echo "错误：cmdline-tools目录结构不符合预期"
            ls -la /tmp/cmdline-tools
            exit 1
          fi
          
          rm -rf /tmp/cmdline-tools*

          # 设置环境变量
          echo "PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV
          
          # 接受许可证
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null
          
          # 安装必要组件
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" \
            "build-tools;33.0.2" \
            "platforms;android-33" \
            "ndk;25.2.9519653"

          # 验证安装
          echo "=== SDK工具验证 ==="
          ls -la $ANDROID_HOME/cmdline-tools/latest/bin
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list_installed



      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install \
            cython==0.29.36 \
            buildozer==1.5.0 \
            python-for-android==2024.1.21  # 使用最新稳定版

          echo "=== 已安装版本 ==="
          python -c "import Cython; print(f'Cython: {Cython.__version__}')"
          buildozer --version
          p4a --version

      - name: Build APK
        run: |
          cd $GITHUB_WORKSPACE
          buildozer -v android debug 2>&1 | tee build.log
          
          if ls bin/*.apk 1> /dev/null 2>&1; then
            mkdir -p artifacts
            cp bin/*.apk artifacts/
          else
            echo "=== 构建失败 ==="
            tail -n 100 build.log
            exit 1
          fi

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: apk-artifact
          path: $GITHUB_WORKSPACE/artifacts/*.apk
