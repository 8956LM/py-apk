name: Build APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Clean environment
        run: |
          sudo rm -rf /usr/local/lib/android/sdk
          rm -rf $GITHUB_WORKSPACE/.buildozer $GITHUB_WORKSPACE/bin
          echo "环境清理完成"

      - name: Install system dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            unzip \
            libc6:i386 \
            lib32stdc++6 \
            lib32z1 \
            zlib1g-dev \
            libncurses6:i386 \
            libstdc++-12-dev \
            libstdc++-12-dev:i386 \
            libx11-6:i386 \
            gcc-multilib \
            g++-multilib \
            autoconf \
            automake \
            libtool \
            openjdk-11-jdk \
            python3.8-dev

          echo "=== 验证安装 ==="
          python3 --version
          java -version

      - name: Create buildozer.spec
        run: |
          cat <<EOF > $GITHUB_WORKSPACE/buildozer.spec
          [app]
          title = MyApp
          package.name = pythonapp
          package.domain = com.example
          source.dir = .
          requirements = python3==3.8.6,kivy
          version = 0.1
          
          android.sdk_path = /usr/local/lib/android/sdk
          android.ndk_path = /usr/local/lib/android/sdk/ndk/25.2.9519653
          android.build_tools_version = 33.0.2
          android.api = 33
          android.minapi = 21
          android.ndk_api = 23
          android.accept_sdk_license = True
          android.archs = arm64-v8a,armeabi-v7a

          [buildozer]
          log_level = 2
          warn_on_root = False
          EOF

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: ''

      - name: Install Android SDK
        run: |
          ANDROID_HOME=/usr/local/lib/android/sdk
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
          
          sudo mkdir -p $ANDROID_HOME
          sudo chown -R runner:runner $ANDROID_HOME
          
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O /tmp/cmdline-tools.zip
          unzip -q /tmp/cmdline-tools.zip -d /tmp/cmdline-tools
          
          mkdir -p $ANDROID_HOME/cmdline-tools/latest
          mv /tmp/cmdline-tools/cmdline-tools/* $ANDROID_HOME/cmdline-tools/latest/
          rm -rf /tmp/cmdline-tools*

          echo "PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME --licenses > /dev/null 2>&1

          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME \
            "platform-tools" \
            "build-tools;33.0.2" \
            "platforms;android-33" \
            "ndk;25.2.9519653" | grep -v "="

      - name: Configure NDK
        run: |
          ANDROID_NDK_HOME=/usr/local/lib/android/sdk/ndk/25.2.9519653
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME" >> $GITHUB_ENV
          echo "ANDROID_NDK=$ANDROID_NDK_HOME" >> $GITHUB_ENV
          $ANDROID_NDK_HOME/ndk-build --version

      - name: Install Buildozer
        run: |
          pip install --upgrade pip
          pip install \
            cython==0.29.36 \
            buildozer==1.5.0 \
            python-for-android==2023.10.06

      - name: Disable problematic patches
        run: |
          P4A_DIR="$GITHUB_WORKSPACE/.buildozer/android/platform/python-for-android"
          if [ -d "$P4A_DIR" ]; then
            mkdir -p "$P4A_DIR/pythonforandroid/recipes/hostpython3/patches"
            echo "Disabled for compatibility" > "$P4A_DIR/pythonforandroid/recipes/hostpython3/patches/.disable"
          fi

      - name: Clean build
        run: |
          buildozer android clean
          rm -rf $GITHUB_WORKSPACE/.buildozer/android/platform/build-*

      - name: Build APK
        run: |
          cd $GITHUB_WORKSPACE
          export PYTHON_FOR_ANDROID_IGNORE_PATCHES=1
          
          if buildozer -v android debug 2>&1 | tee build.log; then
            echo "构建成功"
            mkdir -p artifacts
            cp $GITHUB_WORKSPACE/bin/*.apk artifacts/
          else
            echo "=== 构建失败 ==="
            tail -n 100 build.log
            exit 1
          fi

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: apk-artifact
          path: $GITHUB_WORKSPACE/artifacts/*.apk
