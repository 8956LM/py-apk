name: Build APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Cython==0.29.33 buildozer

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Android SDK and tools
        run: |
          # 设置 Android SDK 路径
          ANDROID_HOME=/usr/local/lib/android/sdk
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          
          # 安装必要依赖
          sudo apt-get update && sudo apt-get install -y \
            unzip \
            libc6-i386 \
            lib32stdc++6 \
            lib32z1 \
            zlib1g-dev

          # 下载命令行工具
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q commandlinetools-linux-*.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          rm commandlinetools-linux-*.zip

          # 接受许可证
          mkdir -p $ANDROID_HOME/licenses
          echo -e "\n24333f8a63b6825ea9c5514f83c2829b004d1fee" > $ANDROID_HOME/licenses/android-sdk-license
          echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > $ANDROID_HOME/licenses/android-sdk-preview-license

          # 安装组件
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME \
            "platform-tools" \
            "build-tools;33.0.2" \
            "platforms;android-33" \
            "cmdline-tools;latest"

          # 验证安装
          $ANDROID_HOME/build-tools/33.0.2/aidl --version

      - name: Configure Buildozer environment
        run: |
          # 强制 Buildozer 使用我们安装的 SDK
          mkdir -p ~/.buildozer/android/platform
          rm -rf ~/.buildozer/android/platform/android-sdk
          ln -s $ANDROID_HOME ~/.buildozer/android/platform/android-sdk
          
          # 预下载 NDK 避免超时
          wget https://dl.google.com/android/repository/android-ndk-r25b-linux.zip -P ~/.buildozer/android/platform/
          unzip -q ~/.buildozer/android/platform/android-ndk-r25b-linux.zip -d ~/.buildozer/android/platform/
          mv ~/.buildozer/android/platform/android-ndk-r25b ~/.buildozer/android/platform/android-ndk-r25b

      - name: Initialize Buildozer
        run: |
          buildozer init
          # 强制修正 spec 文件路径
          sed -i "s|^android.sdk_path =.*|android.sdk_path = $ANDROID_HOME|" buildozer.spec
          sed -i "s|^android.ndk_path =.*|android.ndk_path = $HOME/.buildozer/android/platform/android-ndk-r25b|" buildozer.spec
          sed -i "s|^p4a.branch =.*|p4a.branch = develop|" buildozer.spec

      - name: Modify buildozer.spec
        run: |
          sed -i 's/package.name = myapp/package.name = pythonapp/' buildozer.spec
          sed -i 's/package.domain = org.example/package.domain = com.example/' buildozer.spec
          sed -i 's/source.dir =.*/source.dir = ./' buildozer.spec
          sed -i 's/requirements =.*/requirements = python3,kivy/' buildozer.spec
          sed -i 's/android.build_tools_version =.*/android.build_tools_version = 33.0.2/' buildozer.spec
          sed -i 's/android.api =.*/android.api = 33/' buildozer.spec

      - name: Build APK
        run: |
          # 调试信息
          echo "=== ENVIRONMENT ==="
          echo "ANDROID_HOME=$ANDROID_HOME"
          echo "PATH=$PATH"
          ls -la $ANDROID_HOME/cmdline-tools/latest/bin/
          
          # 构建 APK
          buildozer -v android debug
          
          # 收集产物
          mkdir -p artifacts
          cp bin/*.apk artifacts/

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: python-app-apk
          path: artifacts/
